# listening on port 80 disabled by default, remove the "#" signs to enable
# redirect all traffic to https
server {
	listen 80;
	listen [::]:80;
	server_name proxy;
	return 301 https://$host$request_uri;
}

# tagalong server block
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	root /config/www;
	index index.html index.htm index.php;

	server_name tagalong.jclock.co.uk;

	include /config/nginx/ssl.conf;

	client_max_body_size 0;

	location / {
	    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
	    include /config/nginx/proxy.conf;
	    proxy_pass http://parse-server:1337/;
	}

	location /dashboard/ {
	    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
	    include /config/nginx/proxy.conf;
	    proxy_pass http://parse-dashboard:4040/dashboard/;
	}
}

# git server block
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	root /config/www;
	index index.html index.htm index.php;

	server_name git.jclock.co.uk;

	include /config/nginx/ssl.conf;

	client_max_body_size 0;

	location / {
	    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
	    include /config/nginx/proxy.conf;
	    proxy_pass http://gitea:3000/;
	}
}
#
# drone server block
#server {
#	listen 443 ssl http2;
#	listen [::]:443 ssl http2;
#
#	root /config/www;
#	index index.html index.htm index.php;
#
#	server_name drone.jclock.co.uk;
#
#	include /config/nginx/ssl.conf;
#
#	client_max_body_size 0;
#
#	location / {
#	    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
#	    include /config/nginx/proxy.conf;
#	    proxy_pass http://drone/;
#	}
#}

# syncthing server block
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	root /config/www;
	index index.html index.htm index.php;

	server_name syncthing.jclock.co.uk;

	include /config/nginx/ssl.conf;

	client_max_body_size 0;

	location / {
	    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
	    include /config/nginx/proxy.conf;
	    proxy_pass http://syncthing:8384/;
	}
}

# main server block
server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;

        charset utf-8;

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

	root /config/www;
	index index.html index.htm index.php;

	server_name jclock.co.uk www.jclock.co.uk;

	# enable subfolder method reverse proxy confs
	include /config/nginx/proxy-confs/*.subfolder.conf;

	# all ssl related config moved to ssl.conf
	include /config/nginx/ssl.conf;

	# enable for ldap auth
	#include /config/nginx/ldap.conf;

	client_max_body_size 0;

	location / {
            #try_files $uri $uri/ /index.html /index.php?$args =404 @app;
	    try_files $uri @app;
	}

        location /static/ {
    	    root /var/www-data/ScalewayWebsite/;
        }

        location @app {
	    include /etc/nginx/uwsgi_params;
            uwsgi_pass web:8080;
        }
}

# sample reverse proxy config for "heimdall" via subdomain, with ldap authentication
# ldap-auth container has to be running and the /config/nginx/ldap.conf file should be filled with ldap info
# notice this is a new server block, you need a new server block for each subdomain
#server {
#	listen 443 ssl http2;
#	listen [::]:443 ssl http2;
#
#	root /config/www;
#	index index.html index.htm index.php;
#
#	server_name heimdall.*;
#
#	include /config/nginx/ssl.conf;
#
#	include /config/nginx/ldap.conf;
#
#	client_max_body_size 0;
#
#	location / {
#		# the next two lines will enable ldap auth along with the included ldap.conf in the server block
#		auth_request /auth;
#		error_page 401 =200 /login;
#
#		include /config/nginx/proxy.conf;
#		resolver 127.0.0.11 valid=30s;
#		set $upstream_heimdall heimdall;
#		proxy_pass https://$upstream_heimdall:443;
#	}
#}

# enable subdomain method reverse proxy confs
include /config/nginx/proxy-confs/*.subdomain.conf;
# enable proxy cache for auth
proxy_cache_path cache/ keys_zone=auth_cache:10m;
